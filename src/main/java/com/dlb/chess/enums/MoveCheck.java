package com.dlb.chess.enums;

public enum MoveCheck {
  SUCCESS,
  BASIC_NOT_HAVING_THE_MOVE,
  BASIC_MOVING_PIECE_NONE,
  BASIC_MOVING_PIECE_OPPONENT,
  BASIC_NON_PAWN_PROMOTION_PIECE_SET,
  ALL_MOVEMENT_NOT_POSSIBLE,
  ALL_TO_SQUARE_OCCUPIED_BY_OWN_PIECE,
  LONG_RANGE_PIECES_CANNOT_JUMP_OVER_PIECES,
  ALL_BUT_KING_KING_LEFT_IN_CHECK,
  ALL_BUT_KING_KING_EXPOSED_TO_CHECK,
  PAWN_PROMOTION_MOVE_NO_PROMOTION_PIECE,
  PAWN_NON_PROMOTION_MOVE_PROMOTION_PIECE,
  PAWN_FORWARD_TWO_SQUARE_JUMP_OVER_SQUARE_ONLY_NOT_EMPTY,
  PAWN_FORWARD_TWO_SQUARE_TO_SQUARE_ONLY_NOT_EMPTY,
  PAWN_FORWARD_TWO_SQUARE_BOTH_SQUARE_NOT_EMPTY,
  PAWN_FORWARD_ONE_SQUARE_TO_SQUARE_NOT_EMPTY,
  PAWN_DIAGONAL_OWN_PIECE,
  PAWN_EN_PASSANT_CAPTURE_WRONG_RANK,
  PAWN_EN_PASSANT_CAPTURE_NO_IMMEDIATE_BEFORE_TWO_SQUARE_ADVANCE,
  KING_CAPTURES_GUARDED_PIECE,
  KING_MOVES_NEXT_TO_OPPONENT_KING,
  KING_IN_CHECK_TO_EMPTY_ATTACKED_SQUARE_NO_LEGAL_MOVES,
  KING_IN_CHECK_TO_EMPTY_ATTACKED_SQUARE_LEGAL_MOVES,
  KING_MOVES_INTO_CHECK,
  // the castling cases are overlapping so we check in order numbered
  CASTLING_PRIORITY_1_KING_OR_ROOK_NOT_ON_REQUIRED_SQUARE,
  CASTLING_PRIORITY_2_NO_CASTLING_RIGHT_ON_THIS_SIDE,
  CASTLING_PRIORITY_3_SQUARES_BETWEEN_KING_AND_ROOK_NOT_EMPTY,
  CASTLING_PRIORITY_4_KING_IN_CHECK,
  CASTLING_PRIORITY_5_KING_WOULD_TRAVEL_THROUGH_CHECK,
  CASTLING_PRIORITY_6_KING_WOULD_END_IN_CHECK,
}
