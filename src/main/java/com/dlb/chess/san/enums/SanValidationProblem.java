package com.dlb.chess.san.enums;

public enum SanValidationProblem {
  NONE(false),

  BLANK(false),
  FORMAT(false),
  MOVING_ONTO_ITSELF(false),
  INVALID_MOVEMENT_NON_PAWN_FROM_FILE(false),
  INVALID_MOVEMENT_NON_PAWN_FROM_RANK(false),
  INVALID_MOVEMENT_NON_PAWN_FROM_SQUARE(false),
  INVALID_MOVEMENT_PAWN_TO_RANK(false),
  INVALID_MOVEMENT_PAWN_FROM_FILE(false),
  INVALID_PROMOTION_RANK_PAWN(false),
  INVALID_PROMOTION_NO_PROMOTION_PIECE(false),

  MOVING_ONTO_ONE_PIECE(true),
  NON_CAPTURING_MOVING_ONTO_OPPONENT_PIECE(true),
  CAPTURING_NO_PIECE(true),

  CHECKMATE_BUT_CHECK_ONLY(true),
  CHECKMATE_BUT_NONE(true),
  CHECK_BUT_CHECKMATE(true),
  CHECK_BUT_NONE(true),
  NONE_BUT_CHECKMATE(true),
  NONE_BUT_CHECK(true),

  KING_CASTLING_KING_SIDE_NOT_POSSIBLE(true),
  KING_CASTLING_QUEEN_SIDE_NOT_POSSIBLE(true),
  KING_NON_CASTLING_NO_LEGAL_MOVE(true),
  PAWN_NON_PROMOTION_NO_LEGAL_MOVE(true),
  PAWN_PROMOTION_NO_LEGAL_MOVE(true),
  PIECE_NEITHER_NO_LEGAL_MOVE(true),
  PIECE_NEITHER_MULTIPLE_LEGAL_MOVES(true),
  PIECE_FILE_NO_LEGAL_MOVE(true),
  PIECE_FILE_ONLY_ONE_LEGAL_MOVE(true),
  PIECE_FILE_MUST_USE_RANK(true),
  PIECE_FILE_MUST_USE_RANK_OR_SQUARE(true),
  PIECE_RANK_NO_LEGAL_MOVE(true),
  PIECE_RANK_ONLY_ONE_LEGAL_MOVE(true),
  PIECE_RANK_MUST_USE_FILE(true),
  PIECE_RANK_MUST_USE_FILE_OR_SQUARE(true),
  PIECE_SQUARE_NO_LEGAL_MOVE(true),
  PIECE_SQUARE_ONLY_ONE_LEGAL_MOVE(true),
  PIECE_SQUARE_ONLY_ONE_PIECE_ON_FILE(true),
  PIECE_SQUARE_ONLY_ONE_PIECE_ON_RANK(true);

  private final boolean isPositionRelated;

  SanValidationProblem(boolean isPositionRelated) {
    this.isPositionRelated = isPositionRelated;
  }

  public boolean isPositionRelated() {
    return isPositionRelated;
  }

}
